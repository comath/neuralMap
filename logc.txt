==9733== Memcheck, a memory error detector
==9733== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==9733== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==9733== Command: ./ipCalculator_test
==9733== 
==9733== Conditional jump or move depends on uninitialised value(s)
==9733==    at 0x7ED8E2F: __intel_sse2_strrchr (in /opt/intel/compilers_and_libraries_2017.0.098/linux/compiler/lib/intel64_lin/libiomp5.so)
==9733==    by 0x7EAFB11: init_ap_data (dynamic_link.cpp:314)
==9733==    by 0x7EAFB11: __kmp::init_dl_data() (dynamic_link.cpp:352)
==9733==    by 0x7EAFA66: run_initializer (tbb_misc.h:232)
==9733==    by 0x7EAFA66: atomic_do_once (tbb_misc.h:222)
==9733==    by 0x7EAFA66: atomic_once (dynamic_link.cpp:196)
==9733==    by 0x7EAFA66: static_init_dl_data_t (dynamic_link.cpp:361)
==9733==    by 0x7EAFA66: __sti__$E (dynamic_link.cpp:363)
==9733==    by 0x7EE4645: ??? (in /opt/intel/compilers_and_libraries_2017.0.098/linux/compiler/lib/intel64_lin/libiomp5.so)
==9733==    by 0x7E2A842: ??? (in /opt/intel/compilers_and_libraries_2017.0.098/linux/compiler/lib/intel64_lin/libiomp5.so)
==9733== 
==9733== Thread 2:
==9733== Syscall param sched_setaffinity(mask) points to unaddressable byte(s)
==9733==    at 0x5C548E9: syscall (syscall.S:38)
==9733==    by 0x7EBBFB8: __kmp_affinity_determine_capable (z_Linux_util.c:315)
==9733==    by 0x7E9C34C: __kmp_env_initialize(char const*) (kmp_settings.c:5434)
==9733==    by 0x7E87CAC: __kmp_do_serial_initialize (kmp_runtime.c:6648)
==9733==    by 0x7E87CAC: __kmp_do_middle_initialize (kmp_runtime.c:6779)
==9733==    by 0x7E87CAC: __kmp_middle_initialize (kmp_runtime.c:6897)
==9733==    by 0x7E71F7D: omp_get_num_procs@@VERSION (kmp_ftn_entry.h:501)
==9733==    by 0x851032D: mkl_serv_domain_get_max_threads (in /opt/intel/compilers_and_libraries_2017.0.098/linux/mkl/lib/intel64_lin/libmkl_intel_thread.so)
==9733==    by 0x6B1FB92: mkl_lapack_sgesvd (in /opt/intel/compilers_and_libraries_2017.0.098/linux/mkl/lib/intel64_lin/libmkl_core.so)
==9733==    by 0x9FE62FF: SGESVD (in /opt/intel/compilers_and_libraries_2017.0.098/linux/mkl/lib/intel64_lin/libmkl_intel_lp64.so)
==9733==    by 0x507D90F: SGESVD (in /opt/intel/compilers_and_libraries_2017.0.098/linux/mkl/lib/intel64_lin/libmkl_rt.so)
==9733==    by 0xA35D155: LAPACKE_sgesvd_work (in /opt/intel/compilers_and_libraries_2017.0.098/linux/mkl/lib/intel64_lin/libmkl_intel_lp64.so)
==9733==    by 0xA35CCCB: LAPACKE_sgesvd (in /opt/intel/compilers_and_libraries_2017.0.098/linux/mkl/lib/intel64_lin/libmkl_intel_lp64.so)
==9733==    by 0x40156C: solve (ipCalculator.c:44)
==9733==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==9733== 
==9733== Invalid read of size 4
==9733==    at 0xAF32479: mkl_blas_avx2_xsgemv_t (in /opt/intel/compilers_and_libraries_2017.0.098/linux/mkl/lib/intel64_lin/libmkl_avx2.so)
==9733==    by 0xAF3149D: mkl_blas_avx2_xsgemv (in /opt/intel/compilers_and_libraries_2017.0.098/linux/mkl/lib/intel64_lin/libmkl_avx2.so)
==9733==    by 0x852F2B3: mkl_blas_sgemv (in /opt/intel/compilers_and_libraries_2017.0.098/linux/mkl/lib/intel64_lin/libmkl_intel_thread.so)
==9733==    by 0x9F32AAA: SGEMV (in /opt/intel/compilers_and_libraries_2017.0.098/linux/mkl/lib/intel64_lin/libmkl_intel_lp64.so)
==9733==    by 0x4F69F4E: SGEMV (in /opt/intel/compilers_and_libraries_2017.0.098/linux/mkl/lib/intel64_lin/libmkl_rt.so)
==9733==    by 0x9F6E0AC: cblas_sgemv (in /opt/intel/compilers_and_libraries_2017.0.098/linux/mkl/lib/intel64_lin/libmkl_intel_lp64.so)
==9733==    by 0x401C99: computeDist (ipCalculator.c:250)
==9733==    by 0x4020B5: getInterSig (ipCalculator.c:349)
==9733==    by 0x402176: addBatch_thread (ipCalculator.c:388)
==9733==    by 0x56356B9: start_thread (pthread_create.c:333)
==9733==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==9733== 
==9733== 
==9733== Process terminating with default action of signal 11 (SIGSEGV)
==9733==  Access not within mapped region at address 0x0
==9733==    at 0xAF32479: mkl_blas_avx2_xsgemv_t (in /opt/intel/compilers_and_libraries_2017.0.098/linux/mkl/lib/intel64_lin/libmkl_avx2.so)
==9733==    by 0xAF3149D: mkl_blas_avx2_xsgemv (in /opt/intel/compilers_and_libraries_2017.0.098/linux/mkl/lib/intel64_lin/libmkl_avx2.so)
==9733==    by 0x852F2B3: mkl_blas_sgemv (in /opt/intel/compilers_and_libraries_2017.0.098/linux/mkl/lib/intel64_lin/libmkl_intel_thread.so)
==9733==    by 0x9F32AAA: SGEMV (in /opt/intel/compilers_and_libraries_2017.0.098/linux/mkl/lib/intel64_lin/libmkl_intel_lp64.so)
==9733==    by 0x4F69F4E: SGEMV (in /opt/intel/compilers_and_libraries_2017.0.098/linux/mkl/lib/intel64_lin/libmkl_rt.so)
==9733==    by 0x9F6E0AC: cblas_sgemv (in /opt/intel/compilers_and_libraries_2017.0.098/linux/mkl/lib/intel64_lin/libmkl_intel_lp64.so)
==9733==    by 0x401C99: computeDist (ipCalculator.c:250)
==9733==    by 0x4020B5: getInterSig (ipCalculator.c:349)
==9733==    by 0x402176: addBatch_thread (ipCalculator.c:388)
==9733==    by 0x56356B9: start_thread (pthread_create.c:333)
==9733==  If you believe this happened as a result of a stack
==9733==  overflow in your program's main thread (unlikely but
==9733==  possible), you can try to increase the size of the
==9733==  main thread stack using the --main-stacksize= flag.
==9733==  The main thread stack size used in this run was 8388608.
==9733== 
==9733== HEAP SUMMARY:
==9733==     in use at exit: 115,167 bytes in 56 blocks
==9733==   total heap usage: 111 allocs, 55 frees, 126,523 bytes allocated
==9733== 
==9733== LEAK SUMMARY:
==9733==    definitely lost: 24 bytes in 2 blocks
==9733==    indirectly lost: 0 bytes in 0 blocks
==9733==      possibly lost: 103,860 bytes in 10 blocks
==9733==    still reachable: 11,283 bytes in 44 blocks
==9733==         suppressed: 0 bytes in 0 blocks
==9733== Rerun with --leak-check=full to see details of leaked memory
==9733== 
==9733== For counts of detected and suppressed errors, rerun with: -v
==9733== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
